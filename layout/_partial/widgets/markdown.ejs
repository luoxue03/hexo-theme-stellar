<%
function layoutDiv() {
  if (!item.content?.length && !item.src?.length) return ''
  var el = '';
  el += `<widget class="widget-wrapper${scrollreveal(' ')} markdown">`
  if (item.title?.length > 0) {
    el += '<div class="widget-header dis-select">';
    el += '<span class="name">' + item.title + '</span>';
    el += '</div>';
  }
  el += '<div class="widget-body fs14">';
  if (item.content) {
    el += markdown(item.content);
  }
  if (item.src) {
    el += `<div class="ds-mdrender" src="${item.src}"></div>`
  }
  if (item.linklist) {
    el += partial('components/linklist', {item: item.linklist})
  }
  el += '</div>';
  el += '</widget>';
  return el;
}
%>
<% if (theme.sidebar.widgets.hitokoto.enable) { %>
  <script>
  fetch('https://international.v1.hitokoto.cn/?encode=json')
    .then(response => response.json())
    .then(data => {
      let hitokoto = data.hitokoto; // 数据：肠已断，泪难收。相思重上小红楼。
      let from = data.from;
      let fromWho = data.from_who;
      from = `《${from}》`; // 在 from 变量前后添加“《”和“》”字符
      // console.log(from); // 输出：鹧鸪天·晚日寒鸦一片愁
      // console.log(fromWho); // 输出：辛弃疾
      // console.log(hitokoto);
      // 更新 #hitokoto 元素的内容
      let hitokotoDom = document.querySelector('#hitokoto');
      if (hitokotoDom) {
        hitokotoDom.innerText = hitokoto;
      }
      // 更新 #hitokoto_from 元素的内容
      let fromDom = document.querySelector('#hitokoto_from');
      if (fromDom) {
        fromDom.innerText = from;
      }
      // 更新 #hitokoto_who 元素的内容
      let fromWhoDom = document.querySelector('#hitokoto_who');
      if (fromWhoDom) {
        fromWhoDom.innerText = fromWho;
      }
    })
    .catch(error => console.error('Error:', error));
  </script>
<% } %>
<% if (theme.sidebar.widgets.weather.enable) { %>
  <script>
  // 获取用户IP
  fetch('https://restapi.amap.com/v3/ip?&output=json&key=3e72cf819b95e7cbdf9881af9f5d7273')
    .then(response => response.json())
    .then(data => {
      // 提取IP地址
      const ipAddress = data.ip;
      const city = data.city;
      // 构建请求城市和天气的URL
      const CitySearch= `https://geoapi.qweather.com/v2/city/lookup?location=${city}&key=ca7003b36c8b43b698380f4e01c7bcdf`;
      console.log(CitySearch);
      fetch(CitySearch)
        .then(response => response.json())
        .then(data => {
          // 在这里处理天气数据
          const locationID=data.location[0].id;
          console.log(locationID);
          const weatherApiUrl = `https://devapi.qweather.com/v7/weather/now?location=${locationID}&key=ca7003b36c8b43b698380f4e01c7bcdf`;
          console.log(weatherApiUrl);
          fetch(weatherApiUrl)
            .then(response => response.json())
            .then(weatherData => {
              // 在这里处理天气数据
              const obsTime = weatherData.now.obsTime;
              // 天气格式处理函数
              function formatChinaTimeString(dateStr) {
                // 解析ISO 8601格式的时间字符串（已知是北京时间）
                var date = new Date(dateStr.replace(/-/g, '/').replace('T', ' ').split('+')[0]);
                var year = date.getFullYear();
                var month = ("0" + (date.getMonth() + 1)).slice(-2); // 月份从0开始，需要加1
                var day = ("0" + date.getDate()).slice(-2);
                var hours = ("0" + date.getHours()).slice(-2);
                var minutes = ("0" + date.getMinutes()).slice(-2);
                return year + "年" + month + "月" + day + "日 " + hours + "时:" + minutes + "分";
              }
              const Time = formatChinaTimeString(obsTime);
              const temp = weatherData.now.temp;
              const icon = weatherData.now.icon;
              const text = weatherData.now.text;
              const windDir = weatherData.now.windDir;
              const windScale = weatherData.now.windScale;
              // 获取显示元素内容
              const cityContentElement = document.getElementById('city-content');
              cityContentElement.textContent = city;
              const timeContentElement = document.getElementById('obsTime-content');
              timeContentElement.textContent = Time;
              const tempContentElement = document.getElementById('temp-content');
              tempContentElement.textContent = temp;
              const iconContentElements = document.querySelectorAll('.icon-content');

              iconContentElements.forEach((element) => {
                  element.innerHTML = `<i class="qi-${icon}"></i>`;
              });
              const textContentElement = document.getElementById('text-content');
              textContentElement.textContent = text;
              const windDirContentElement = document.getElementById('windDir-content');
              windDirContentElement.textContent = windDir;
              const windScaleContentElement = document.getElementById('windScale-content');
              windScaleContentElement.textContent = windScale;
  })
})
    })
</script>
<% } %>

<% if (theme.comments.waline.list) { %>
  <script type="module">
    import {
      UserList
    } from 'https://fastly.jsdelivr.net/npm/@waline/client/dist/waline.mjs';
    UserList({
      el: '#waline-users',
      serverURL: 'https://waline.luoxue03.cn',
      count: 10,
      mode: 'list'
    });
  </script>
<% } %>

<% if (theme.comments.waline.wall) { %>
  <script type="module">
    import {
      UserList
    } from 'https://fastly.jsdelivr.net/npm/@waline/client/dist/waline.mjs';
    UserList({
      el: '#waline-wall',
      serverURL: 'https://waline.luoxue03.cn',
      count: 50,
      mode: 'wall',
    });
  </script>
<% } %>
<%- layoutDiv() %>
